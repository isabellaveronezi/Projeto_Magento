<?php
/**
 * JulioReis_CorreiosFollowup
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category  JulioReis
 * @package   JulioReis_CorreiosFollowup
 *
 * @copyright Copyright (c) 2018 Julio Reis (www.rapidets.com.br)
 *
 * @author    Julio Reis <julioreis.si@gmail.com>
 */

namespace JulioReis\CorreiosFollowup\Model;

use Magento\Framework\App\Config\ScopeConfigInterface;
use Magento\Framework\Encryption\EncryptorInterface;
use Magento\Store\Model\ScopeInterface;
use Magento\Store\Model\StoreManager;

class Config
{

    /** @var ScopeConfigInterface */
    private $scopeConfig;

    /** @var EncryptorInterface */
    private $encryptor;

    /** @var StoreManager */
    private $storeManager;

    /** @var string */
    private $configGroup = 'general';

    /**
     * Service constructor.
     *
     * @param ScopeConfigInterface $scopeConfig
     * @param EncryptorInterface $encryptor
     * @param StoreManager $storeManager
     */
    public function __construct(
        ScopeConfigInterface $scopeConfig,
        EncryptorInterface $encryptor,
        StoreManager $storeManager
    ) {
        $this->scopeConfig = $scopeConfig;
        $this->encryptor = $encryptor;
        $this->storeManager = $storeManager;
    }

    /**
     * @param string $field
     * @param string $configGroup
     * @param string $section
     * @param int|null $scopeCode
     * @param string $scopeType
     *
     * @return mixed
     */
    public function getStoreConfig($field, $configGroup, $section, $scopeCode = null, $scopeType = null)
    {
        if (!$scopeType) {
            $scopeType = ScopeInterface::SCOPE_STORES;
        }

        $path = implode('/', [$section, $configGroup, $field]);

        try {
            $scopeCode = $this->storeManager->getStore($scopeCode)->getId();
            $value = $this->scopeConfig->getValue($path, $scopeType, $scopeCode);

            return $value;
        } catch (\Exception $e) {
            return false;
        }
    }

    /**
     * @param string $field
     * @param string $configGroup
     * @param null|int $scopeCode
     * @param string $scopeType
     *
     * @return mixed
     */
    public function getModuleConfig($field, $configGroup = null, $scopeCode = null, $scopeType = null)
    {
        if (!$configGroup) {
            $configGroup = $this->configGroup;
        }

        return $this->getStoreConfig($field, $configGroup, 'julioreis_correiosfollowup', $scopeCode, $scopeType);
    }
}
